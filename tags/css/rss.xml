<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>css on 靖风行</title><link>https://blog.haohome.top/tags/css/</link><description>Recent content in css on 靖风行</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 25 Feb 2018 20:30:54 +0000</lastBuildDate><atom:link href="https://blog.haohome.top/tags/css/rss.xml" rel="self" type="application/rss+xml"/><item><title>flex弹性布局</title><link>https://blog.haohome.top/post/css/flex%E5%B8%83%E5%B1%80/</link><pubDate>Sun, 25 Feb 2018 20:30:54 +0000</pubDate><guid>https://blog.haohome.top/post/css/flex%E5%B8%83%E5%B1%80/</guid><description>flex布局是什么 Flex 是 Flexible Box 的缩写，意为&amp;quot;弹性布局&amp;quot;，用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为flex布局</description></item><item><title>CSS样式----文字长度溢出显示省略号</title><link>https://blog.haohome.top/post/css/css%E6%A0%B7%E5%BC%8F---%E6%96%87%E5%AD%97%E9%95%BF%E5%BA%A6%E6%BA%A2%E5%87%BA%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7/</link><pubDate>Wed, 02 Nov 2016 22:56:24 +0000</pubDate><guid>https://blog.haohome.top/post/css/css%E6%A0%B7%E5%BC%8F---%E6%96%87%E5%AD%97%E9%95%BF%E5%BA%A6%E6%BA%A2%E5%87%BA%E6%98%BE%E7%A4%BA%E7%9C%81%E7%95%A5%E5%8F%B7/</guid><description>text-overflow省略号样式语法结构 text-overflow语法： text-overflow : clip | ellipsis text-overflow参数值和解释： clip : 不显示省略</description></item><item><title>Viewport剖析</title><link>https://blog.haohome.top/post/css/viewports%E5%89%96%E6%9E%90/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.haohome.top/post/css/viewports%E5%89%96%E6%9E%90/</guid><description>&lt;p>转载自W3CPlus创始人 &lt;strong>大漠&lt;/strong> 博客:
&lt;a href="https://www.w3cplus.com/css/viewports.html" title="原文链接" rel="noopener external nofollow noreferrer" target="_blank" class=" exturl">
原文链接
&lt;i class="fa fa-external-link-alt">&lt;/i>
&lt;/a>&lt;/p>
&lt;h2 id="1-桌面pc浏览器">1. 桌面（pc）浏览器&lt;/h2>
&lt;h3 id="11-设备的pixels和css的pixels">1.1 设备的pixels和CSS的pixels&lt;/h3>
&lt;p>pixels决定了你工作所用的那些设备上正式的分辨率。在大多数情况下，能够从screen.width/height上取出具体值&lt;/p>
&lt;p>如果用户缩放（zoom）了浏览器，当然必须改变计算方式。&lt;/p>
&lt;p>现代浏览器上的缩放，是基于“伸展”pixels。结果是，html元素上的宽度并没有因为缩放200%而由128pix变成256px，而是真实的pixels的被计算成了双倍。html元素在形式上依然是128CSS的pixels，即便它占用了256设备的pixels 。&lt;/p></description></item></channel></rss>